
version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: ohmc_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-ohmc_weather}
      POSTGRES_USER: ${POSTGRES_USER:-ohmc_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ohmc_password_2024}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - ohmc_network
    restart: unless-stopped

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: ohmc_backend
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-ohmc_user}:${POSTGRES_PASSWORD:-ohmc_password_2024}@db:5432/${POSTGRES_DB:-ohmc_weather}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY:-django-insecure-development-key-change-in-production}
      - DJANGO_DEBUG=${DJANGO_DEBUG:-True}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS:-localhost,127.0.0.1,0.0.0.0}
      - OHMC_PUBLIC_URL=${OHMC_PUBLIC_URL:-http://yaku.ohmc.ar/public/}
    volumes:
      - ./backend:/app
      - media_files:/app/media
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - ohmc_network
    restart: unless-stopped
    command: >
      sh -c "python manage.py collectstatic --noinput &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"

  nginx:
    image: nginx:alpine
    container_name: ohmc_nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - media_files:/var/www/media:ro
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - ohmc_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  media_files:
    driver: local

networks:
  ohmc_network:
    driver: bridge
